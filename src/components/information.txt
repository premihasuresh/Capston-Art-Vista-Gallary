checkout.js

import React from 'react';
import { useSelector } from 'react-redux';
import { useNavigate } from 'react-router-dom';
import './Checkout.css'; // Ensure this path is correct

const Checkout = () => {
    const cartItems = useSelector(state => state.cart.items);
    const navigate = useNavigate();

    const handlePayment = async () => {
        try {
            const response = await fetch('/api/payments/create-checkout-session', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ items: cartItems }),
            });

            const { url } = await response.json();
            window.location.href = url; // Redirect to payment page
        } catch (error) {
            console.error('Payment error:', error);
        }
    };

    return (
        <div className="checkout-container">
            <header>
                <h1>Checkout</h1>
            </header>
            <main>
                <div className="checkout-form">
                    {cartItems.length === 0 ? (
                        <p>Your cart is empty.</p>
                    ) : (
                        cartItems.map(item => (
                            <div key={item.id} className="cart-item">
                                <span>{item.name}</span>
                                <span>${item.price}</span>
                            </div>
                        ))
                    )}
                </div>
                <button onClick={handlePayment} className="btn-submit">Pay Now</button>
            </main>
            <footer>
            </footer>
        </div>
    );
};

export default Checkout;

// src/pages/Cart.js
import React from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { removeItem } from '../redux/slices/cartSlice';  // Ensure the path is correct

const Cart = () => {
  const cart = useSelector(state => state.cart);
  const dispatch = useDispatch();

  const handleRemove = (id) => {
    dispatch(removeItem({ id }));
  };

  return (
    <div className="container">
      <h1>Your Cart</h1>
      {cart.length === 0 ? (
        <p>Your cart is empty</p>
      ) : (
        cart.map((item, index) => (
          <div key={index} className="card mb-3" style={{ maxWidth: '540px' }}>
            <div className="row g-0">
              <div className="col-md-4">
                <img src={item.image} className="img-fluid rounded-start" alt={item.name} />
              </div>
              <div className="col-md-8">
                <div className="card-body">
                  <h5 className="card-title">{item.name}</h5>
                  <p className="card-text">{item.description}</p>
                  <p className="card-text"><small className="text-muted">Artist: {item.artist}</small></p>
                  <p className="card-text"><small className="text-muted">Price: ${item.price}</small></p>
                  <button onClick={() => handleRemove(item.id)} className="btn btn-danger">Remove</button>
                </div>
              </div>
            </div>
          </div>
        ))
      )}
    </div>
  );
};

export default Cart;

register.css
.register-container {
    max-width: 400px;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.register-container header {
    text-align: center;
    margin-bottom: 20px;
}

.register-form {
    display: flex;
    flex-direction: column;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

.form-control {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

.error {
    color: red;
    font-size: 0.875rem;
}

.btn-submit {
    padding: 10px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.btn-submit:hover {
    background-color: #0056b3;
}
